name: Publish Docker Image

on:
  release:
    types: [published]
  push:
    branches: [main]
    # Publish semver tags as Docker tags
    tags: ['v*.*.*']
  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'docker/**'
      - 'requirements.txt'
      - '.github/workflows/docker-publish.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # Configurable cache settings
  BUILDX_CACHE_FROM: type=gha
  BUILDX_CACHE_TO: type=gha,mode=max

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup Docker layer caching
      - name: Set up Docker layer cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha,format=short
            type=ref,event=pr


      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            ${{ env.BUILDX_CACHE_FROM }}
            type=local,src=/tmp/.buildx-cache
          cache-to: |
            ${{ env.BUILDX_CACHE_TO }}
            type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

      # Move cache to avoid it growing indefinitely
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          set -e
          for tag in ${TAGS}; do
            if ! cosign sign --yes "${tag}@${DIGEST}"; then
              echo "Error: Failed to sign ${tag}@${DIGEST}" >&2
              exit 1
            fi
          done
